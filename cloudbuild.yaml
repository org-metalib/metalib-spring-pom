steps:
- name: bash
  script: |
    #!/usr/bin/env bash
    apk -q --no-cache add openjdk11 maven curl gpg gpg-agent yq git
    export MAVEN_GITHUB_USERNAME=$(echo $METALIB_GITHUB_MAVEN | base64 -d | yq .MAVEN_GITHUB_USERNAME)
    export MAVEN_GITHUB_PASSWORD=$(echo $METALIB_GITHUB_MAVEN | base64 -d | yq .MAVEN_GITHUB_PASSWORD)
    export OSSRH_USERNAME=$(echo $METALIB_GITHUB_MAVEN | base64 -d | yq .OSSRH_USERNAME)
    export OSSRH_PASSWORD=$(echo $METALIB_GITHUB_MAVEN | base64 -d | yq .OSSRH_PASSWORD)
    export OSSRH_GPG_PASSPHRASE=$(echo $METALIB_GITHUB_MAVEN | base64 -d | yq .OSSRH_GPG_PASSPHRASE)
    echo $METALIB_GITHUB_MAVEN | base64 -d | yq .OSSRH_PUBLIC_KEY | gpg --batch --import
    echo $METALIB_GITHUB_MAVEN | base64 -d | yq .OSSRH_PRIVATE_KEY | gpg --batch --import
    git config --global user.email "ikatraev@gmail.com"
    git config --global user.name "ikatraev"
    git status
    #./mvnw -s ./.mvn/settings.xml release:prepare release:perform -B -DskipTests=true -Djava.security.egd=file:/dev/./urandom -DscmCommentPrefix="[mvn-release] " -Prelease-sign-artifacts
  secretEnv: ['METALIB_GITHUB_MAVEN']
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/metalib-github-maven/versions/latest
      env: 'METALIB_GITHUB_MAVEN'

# 549588183482@cloudbuild.gserviceaccount.com
#    #!/usr/bin/env bash
#    echo "=================== Starting"
#    apk -q --no-cache add openjdk11 maven curl gpg
#    ./mvnw -B clean
#    gpg --version

#availableSecrets:
#  secretManager:
#    - versionName: projects/$PROJECT_ID/secrets/mySecret/versions/latest
#      env: 'MYSECRET'